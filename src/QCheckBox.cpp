
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QCheckBox.hpp"

void * QWQCheckBoxCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QCheckBox * ptr = new QCheckBox(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQCheckBoxCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQCheckBox * ptr = new SCQCheckBox(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * QWQCheckBoxCtor_2(char * text, void * parent)
{
    QString xtext = QString(text);
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QCheckBox * ptr = new QCheckBox(xtext, xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQCheckBoxCtor_2(char * text, void * parent)
{
    QString xtext = QString(text);
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQCheckBox * ptr = new SCQCheckBox(xtext, xparent);
    return reinterpret_cast<void *>(ptr);
}

void QWQCheckBoxsetTristate(void * obj, int8_t  y)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    bool xy = y;
    ptr->setTristate(xy);
}

int8_t QWQCheckBoxisTristate(void * obj)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    bool retVal = ptr->isTristate();
    return retVal;
}

int QWQCheckBoxcheckState(void * obj)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    Qt::CheckState retVal = ptr->checkState();
    return retVal;
}

void QWQCheckBoxsetCheckState(void * obj, int  state)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    Qt::CheckState xstate = static_cast<Qt::CheckState>(state);
    ptr->setCheckState(xstate);
}

void QWvalidateCB_QCheckBox(void *obj, int32_t objId, char *methodName)
{
    SCQCheckBox * ptr = reinterpret_cast<SCQCheckBox *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQCheckBoxDtor(void * obj)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    delete ptr;
}

void SCWQCheckBoxDtor(void * obj)
{
    QCheckBox * ptr = reinterpret_cast<QCheckBox *>(obj);
    delete ptr;
}

