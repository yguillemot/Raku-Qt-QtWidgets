
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QAction.hpp"
#include "StrBuffer.h"

void * QWQActionCtor_1(void * parent)
{
    QObject * xparent = reinterpret_cast<QObject *>(parent);
    QAction * ptr = new QAction(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQActionCtor_1(void * parent)
{
    QObject * xparent = reinterpret_cast<QObject *>(parent);
    SCQAction * ptr = new SCQAction(xparent);
    return reinterpret_cast<void *>(ptr);
}

void QWQActiontext(void * retBuffer, void * obj)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    QString retVal = ptr->text();
    if (!retVal.isNull()) {
        QWStrBufferWrite(retBuffer, retVal.toUtf8().data());
    }
}

void QWQActionsetToolTip(void * obj, char * tip)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    QString xtip = QString(tip);
    ptr->setToolTip(xtip);
}

void QWQActionsetCheckable(void * obj, int8_t  arg1)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    bool xarg1 = arg1;
    ptr->setCheckable(xarg1);
}

void QWQActiontrigger(void * obj)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    ptr->trigger();
}

void QWQActionsetChecked(void * obj, int8_t  arg1)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    bool xarg1 = arg1;
    ptr->setChecked(xarg1);
}

void QWQActionsetEnabled(void * obj, int8_t  arg1)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    bool xarg1 = arg1;
    ptr->setEnabled(xarg1);
}

void QWQActionsetDisabled(void * obj, int8_t  b)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    bool xb = b;
    ptr->setDisabled(xb);
}

void QWvalidateCB_QAction(void *obj, int32_t objId, char *methodName)
{
    SCQAction * ptr = reinterpret_cast<SCQAction *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQActionDtor(void * obj)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    delete ptr;
}

void SCWQActionDtor(void * obj)
{
    QAction * ptr = reinterpret_cast<QAction *>(obj);
    delete ptr;
}

