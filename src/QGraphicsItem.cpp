
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QGraphicsItem.hpp"

static QGraphicsItem * up_cast(void * obj, int callerIndex, const char * methodName)
{
    // methodName parameter is only used to help debugging
    // if an erroneous callerIndex is used.
    // This should never occur and this parameter
    // is going to be removed after some time.
    
    switch (callerIndex) {
        case 0 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QAbstractGraphicsShapeItem *>(obj));
        case 1 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsEllipseItem *>(obj));
        case 2 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsItemGroup *>(obj));
        case 3 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsLineItem *>(obj));
        case 4 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsObject *>(obj));
        case 5 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsPathItem *>(obj));
        case 6 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsPixmapItem *>(obj));
        case 7 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsPolygonItem *>(obj));
        case 8 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsProxyWidget *>(obj));
        case 9 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsRectItem *>(obj));
        case 10 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsSimpleTextItem *>(obj));
        case 11 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsTextItem *>(obj));
        case 12 :
            return dynamic_cast<QGraphicsItem *>(
                    reinterpret_cast<QGraphicsWidget *>(obj));
        default :
            std::cerr << "up_cast(\"QGraphicsItem\") : "
                      << "Unsupported caller index "
                      << callerIndex << " from method "
                      << methodName << "\n";
            return nullptr;        // Force a crash
    }
}

void QWQGraphicsItemsetParentItem(void * obj, int callerIdx, void * parent)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setParentItem");
    QGraphicsItem * xparent = reinterpret_cast<QGraphicsItem *>(parent);
    ptr->setParentItem(xparent);
}

void QWQGraphicsItemhide(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "hide");
    ptr->hide();
}

void QWQGraphicsItemshow(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "show");
    ptr->show();
}

void QWQGraphicsItemsetEnabled(void * obj, int callerIdx, int8_t  enabled)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setEnabled");
    bool xenabled = enabled;
    ptr->setEnabled(xenabled);
}

double QWQGraphicsItemx(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "x");
    qreal retVal = ptr->x();
    return retVal;
}

void QWQGraphicsItemsetX(void * obj, int callerIdx, double  x)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setX");
    qreal xx = x;
    ptr->setX(xx);
}

double QWQGraphicsItemy(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "y");
    qreal retVal = ptr->y();
    return retVal;
}

void QWQGraphicsItemsetY(void * obj, int callerIdx, double  y)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setY");
    qreal xy = y;
    ptr->setY(xy);
}

void QWQGraphicsItemsetPos_1(void * obj, int callerIdx, void * pos)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setPos");
    QPointF & xpos = * reinterpret_cast<QPointF *>(pos);
    ptr->setPos(xpos);
}

void QWQGraphicsItemsetPos_2(void * obj, int callerIdx, double  x, double  y)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setPos");
    qreal xx = x;
    qreal xy = y;
    ptr->setPos(xx, xy);
}

void QWQGraphicsItemensureVisible_1(void * obj, int callerIdx, void * rect, int32_t  xmargin, int32_t  ymargin)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "ensureVisible");
    QRectF & xrect = * reinterpret_cast<QRectF *>(rect);
    int xxmargin = xmargin;
    int xymargin = ymargin;
    ptr->ensureVisible(xrect, xxmargin, xymargin);
}

void QWQGraphicsItemensureVisible_2(void * obj, int callerIdx, double  x, double  y, double  w, double  h, int32_t  xmargin, int32_t  ymargin)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "ensureVisible");
    qreal xx = x;
    qreal xy = y;
    qreal xw = w;
    qreal xh = h;
    int xxmargin = xmargin;
    int xymargin = ymargin;
    ptr->ensureVisible(xx, xy, xw, xh, xxmargin, xymargin);
}

double QWQGraphicsItemzValue(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "zValue");
    qreal retVal = ptr->zValue();
    return retVal;
}

void QWQGraphicsItemsetZValue(void * obj, int callerIdx, double  z)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "setZValue");
    qreal xz = z;
    ptr->setZValue(xz);
}

void * QWQGraphicsItemchildrenBoundingRect(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "childrenBoundingRect");
    QRectF retVal = ptr->childrenBoundingRect();
    QRectF * xxretVal = new QRectF(retVal);
    void * xretVal = reinterpret_cast<void *>(xxretVal);
    return xretVal;
}

void * QWQGraphicsItemsceneBoundingRect(void * obj, int callerIdx)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "sceneBoundingRect");
    QRectF retVal = ptr->sceneBoundingRect();
    QRectF * xxretVal = new QRectF(retVal);
    void * xretVal = reinterpret_cast<void *>(xxretVal);
    return xretVal;
}

int8_t QWQGraphicsItemcontains(void * obj, int callerIdx, void * point)
{
    QGraphicsItem * ptr = up_cast(obj, callerIdx, "contains");
    QPointF & xpoint = * reinterpret_cast<QPointF *>(point);
    bool retVal = ptr->contains(xpoint);
    return retVal;
}

