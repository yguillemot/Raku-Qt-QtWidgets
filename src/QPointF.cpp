
// 
// This file has been automatically generated by RaQt_maker V0.0.4.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QPointF.h"

void * QWQPointFCtor_1()
{
    QPointF * ptr = new QPointF();
    return reinterpret_cast<void *>(ptr);
}

void * QWQPointFCtor_2(void * p)
{
    QPoint & xp = * reinterpret_cast<QPoint *>(p);
    QPointF * ptr = new QPointF(xp);
    return reinterpret_cast<void *>(ptr);
}

void * QWQPointFCtor_3(double  xpos, double  ypos)
{
    qreal xxpos = xpos;
    qreal xypos = ypos;
    QPointF * ptr = new QPointF(xxpos, xypos);
    return reinterpret_cast<void *>(ptr);
}

double QWQPointFmanhattanLength(void * obj)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    qreal retVal = ptr->manhattanLength();
    return retVal;
}

int8_t QWQPointFisNull(void * obj)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    bool retVal = ptr->isNull();
    return retVal;
}

double QWQPointFx(void * obj)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    qreal retVal = ptr->x();
    return retVal;
}

double QWQPointFy(void * obj)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    qreal retVal = ptr->y();
    return retVal;
}

void QWQPointFsetX(void * obj, double  x)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    qreal xx = x;
    ptr->setX(xx);
}

void QWQPointFsetY(void * obj, double  y)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    qreal xy = y;
    ptr->setY(xy);
}

void QWQPointFDtor(void * obj)
{
    QPointF * ptr = reinterpret_cast<QPointF *>(obj);
    delete ptr;
}

