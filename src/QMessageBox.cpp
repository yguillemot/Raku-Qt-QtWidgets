
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QMessageBox.hpp"

void * QWQMessageBoxCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QMessageBox * ptr = new QMessageBox(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQMessageBoxCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQMessageBox * ptr = new SCQMessageBox(xparent);
    return reinterpret_cast<void *>(ptr);
}

void QWQMessageBoxsetStandardButtons(void * obj, int  buttons)
{
    QMessageBox * ptr = reinterpret_cast<QMessageBox *>(obj);
    QMessageBox::StandardButtons xbuttons = static_cast<QMessageBox::StandardButtons>(buttons);
    ptr->setStandardButtons(xbuttons);
}

void QWQMessageBoxsetText(void * obj, char * text)
{
    QMessageBox * ptr = reinterpret_cast<QMessageBox *>(obj);
    QString xtext = QString(text);
    ptr->setText(xtext);
}

void QWQMessageBoxsetInformativeText(void * obj, char * text)
{
    QMessageBox * ptr = reinterpret_cast<QMessageBox *>(obj);
    QString xtext = QString(text);
    ptr->setInformativeText(xtext);
}

void QWvalidateCB_QMessageBox(void *obj, int32_t objId, char *methodName)
{
    SCQMessageBox * ptr = reinterpret_cast<SCQMessageBox *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQMessageBoxDtor(void * obj)
{
    QMessageBox * ptr = reinterpret_cast<QMessageBox *>(obj);
    delete ptr;
}

void SCWQMessageBoxDtor(void * obj)
{
    QMessageBox * ptr = reinterpret_cast<QMessageBox *>(obj);
    delete ptr;
}

