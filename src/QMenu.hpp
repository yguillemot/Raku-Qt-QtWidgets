
// 
// This file has been automatically generated by RaQt_maker V0.0.4.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 


#include "QMenu.h"
#include "QtWidgetsWrapper.hpp"

class SCQMenu : public QMenu, public CallbackValidator
{
public:
    SCQMenu(QWidget* parent):
        QMenu(parent)
    { }

    SCQMenu(const QString& title, QWidget* parent):
        QMenu(title, parent)
    { }

    ~SCQMenu() { }

    void enterEvent(QEvent* event)
    {
        if (m_enterEvent) {
            (*slotCallbackQEvent)(
                m_objId, "enterEvent",
                event
            );
        }
        QMenu::enterEvent(event);
    }

    void leaveEvent(QEvent* event)
    {
        if (m_leaveEvent) {
            (*slotCallbackQEvent)(
                m_objId, "leaveEvent",
                event
            );
        }
        QMenu::leaveEvent(event);
    }

    void mouseMoveEvent(QMouseEvent* event)
    {
        if (m_mouseMoveEvent) {
            (*slotCallbackQMouseEvent)(
                m_objId, "mouseMoveEvent",
                event
            );
        }
        QMenu::mouseMoveEvent(event);
    }

    void mousePressEvent(QMouseEvent* event)
    {
        if (m_mousePressEvent) {
            (*slotCallbackQMouseEvent)(
                m_objId, "mousePressEvent",
                event
            );
        }
        QMenu::mousePressEvent(event);
    }

    void mouseReleaseEvent(QMouseEvent* event)
    {
        if (m_mouseReleaseEvent) {
            (*slotCallbackQMouseEvent)(
                m_objId, "mouseReleaseEvent",
                event
            );
        }
        QMenu::mouseReleaseEvent(event);
    }

    void paintEvent(QPaintEvent* event)
    {
        if (m_paintEvent) {
            (*slotCallbackQPaintEvent)(
                m_objId, "paintEvent",
                event
            );
        }
        QMenu::paintEvent(event);
    }

    void resizeEvent(QResizeEvent* event)
    {
        if (m_resizeEvent) {
            (*slotCallbackQResizeEvent)(
                m_objId, "resizeEvent",
                event
            );
        }
        QMenu::resizeEvent(event);
    }

};

