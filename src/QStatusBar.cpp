
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QStatusBar.hpp"
#include "StrBuffer.h"

void * QWQStatusBarCtor(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QStatusBar * ptr = new QStatusBar(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQStatusBarCtor(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQStatusBar * ptr = new SCQStatusBar(xparent);
    return reinterpret_cast<void *>(ptr);
}

void QWQStatusBaraddWidget(void * obj, void * widget, int32_t  stretch)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    QWidget * xwidget = reinterpret_cast<QWidget *>(widget);
    int xstretch = stretch;
    ptr->addWidget(xwidget, xstretch);
}

int32_t QWQStatusBarinsertWidget(void * obj, int32_t  index, void * widget, int32_t  stretch)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    int xindex = index;
    QWidget * xwidget = reinterpret_cast<QWidget *>(widget);
    int xstretch = stretch;
    int retVal = ptr->insertWidget(xindex, xwidget, xstretch);
    return retVal;
}

void QWQStatusBaraddPermanentWidget(void * obj, void * widget, int32_t  stretch)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    QWidget * xwidget = reinterpret_cast<QWidget *>(widget);
    int xstretch = stretch;
    ptr->addPermanentWidget(xwidget, xstretch);
}

int32_t QWQStatusBarinsertPermanentWidget(void * obj, int32_t  index, void * widget, int32_t  stretch)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    int xindex = index;
    QWidget * xwidget = reinterpret_cast<QWidget *>(widget);
    int xstretch = stretch;
    int retVal = ptr->insertPermanentWidget(xindex, xwidget, xstretch);
    return retVal;
}

void QWQStatusBarremoveWidget(void * obj, void * widget)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    QWidget * xwidget = reinterpret_cast<QWidget *>(widget);
    ptr->removeWidget(xwidget);
}

void QWQStatusBarsetSizeGripEnabled(void * obj, int8_t  arg1)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    bool xarg1 = arg1;
    ptr->setSizeGripEnabled(xarg1);
}

int8_t QWQStatusBarisSizeGripEnabled(void * obj)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    bool retVal = ptr->isSizeGripEnabled();
    return retVal;
}

void QWQStatusBarcurrentMessage(void * retBuffer, void * obj)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    QString retVal = ptr->currentMessage();
    if (!retVal.isNull()) {
        QWStrBufferWrite(retBuffer, retVal.toUtf8().data());
    }
}

void QWQStatusBarshowMessage(void * obj, char * text, int32_t  timeout)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    QString xtext = QString(text);
    int xtimeout = timeout;
    ptr->showMessage(xtext, xtimeout);
}

void QWQStatusBarclearMessage(void * obj)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    ptr->clearMessage();
}

void QWvalidateCB_QStatusBar(void *obj, int32_t objId, char *methodName)
{
    SCQStatusBar * ptr = reinterpret_cast<SCQStatusBar *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQStatusBarDtor(void * obj)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    delete ptr;
}

void SCWQStatusBarDtor(void * obj)
{
    QStatusBar * ptr = reinterpret_cast<QStatusBar *>(obj);
    delete ptr;
}

