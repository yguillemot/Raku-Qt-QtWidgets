
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QDialog.hpp"

void * QWQDialogCtor(void * parent, int  f)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    Qt::WindowFlags xf = static_cast<Qt::WindowFlags>(f);
    QDialog * ptr = new QDialog(xparent, xf);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQDialogCtor(void * parent, int  f)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    Qt::WindowFlags xf = static_cast<Qt::WindowFlags>(f);
    SCQDialog * ptr = new SCQDialog(xparent, xf);
    return reinterpret_cast<void *>(ptr);
}

int32_t QWQDialogresult(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    int retVal = ptr->result();
    return retVal;
}

void QWQDialogsetVisible(void * obj, int8_t  visible)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    bool xvisible = visible;
    ptr->setVisible(xvisible);
}

void QWQDialogsetOrientation(void * obj, int  orientation)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    Qt::Orientation xorientation = static_cast<Qt::Orientation>(orientation);
    ptr->setOrientation(xorientation);
}

int QWQDialogorientation(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    Qt::Orientation retVal = ptr->orientation();
    return retVal;
}

void QWQDialogsetExtension(void * obj, void * extension)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    QWidget * xextension = reinterpret_cast<QWidget *>(extension);
    ptr->setExtension(xextension);
}

void * QWQDialogextension(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    QWidget * retVal = ptr->extension();
    return retVal;
}

void * QWQDialogminimumSizeHint(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    QSize retVal = ptr->minimumSizeHint();
    QSize * xxretVal = new QSize(retVal);
    void * xretVal = reinterpret_cast<void *>(xxretVal);
    return xretVal;
}

void QWQDialogsetSizeGripEnabled(void * obj, int8_t  arg1)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    bool xarg1 = arg1;
    ptr->setSizeGripEnabled(xarg1);
}

int8_t QWQDialogisSizeGripEnabled(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    bool retVal = ptr->isSizeGripEnabled();
    return retVal;
}

void QWQDialogsetModal(void * obj, int8_t  modal)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    bool xmodal = modal;
    ptr->setModal(xmodal);
}

void QWQDialogsetResult(void * obj, int32_t  r)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    int xr = r;
    ptr->setResult(xr);
}

void QWQDialogopen(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    ptr->open();
}

int32_t QWQDialogexec(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    int retVal = ptr->exec();
    return retVal;
}

void QWQDialogdone(void * obj, int32_t  arg1)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    int xarg1 = arg1;
    ptr->done(xarg1);
}

void QWQDialogaccept(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    ptr->accept();
}

void QWQDialogreject(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    ptr->reject();
}

void QWvalidateCB_QDialog(void *obj, int32_t objId, char *methodName)
{
    SCQDialog * ptr = reinterpret_cast<SCQDialog *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQDialogDtor(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    delete ptr;
}

void SCWQDialogDtor(void * obj)
{
    QDialog * ptr = reinterpret_cast<QDialog *>(obj);
    delete ptr;
}

