
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QMenu.hpp"

void * QWQMenuCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QMenu * ptr = new QMenu(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQMenuCtor_1(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQMenu * ptr = new SCQMenu(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * QWQMenuCtor_2(char * title, void * parent)
{
    QString xtitle = QString(title);
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QMenu * ptr = new QMenu(xtitle, xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQMenuCtor_2(char * title, void * parent)
{
    QString xtitle = QString(title);
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQMenu * ptr = new SCQMenu(xtitle, xparent);
    return reinterpret_cast<void *>(ptr);
}

void * QWQMenuaddAction_1(void * obj, char * text)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    QString xtext = QString(text);
    QAction * retVal = ptr->addAction(xtext);
    return retVal;
}

void * QWQMenuaddSeparator(void * obj)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    QAction * retVal = ptr->addSeparator();
    return retVal;
}

void * QWQMenuaddSection_1(void * obj, char * text)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    QString xtext = QString(text);
    QAction * retVal = ptr->addSection(xtext);
    return retVal;
}

void * QWQMenuexec_1(void * obj)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    QAction * retVal = ptr->exec();
    return retVal;
}

void * QWQMenuexec_2(void * obj, void * pos, void * at)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    QPoint & xpos = * reinterpret_cast<QPoint *>(pos);
    QAction * xat = reinterpret_cast<QAction *>(at);
    QAction * retVal = ptr->exec(xpos, xat);
    return retVal;
}

void QWvalidateCB_QMenu(void *obj, int32_t objId, char *methodName)
{
    SCQMenu * ptr = reinterpret_cast<SCQMenu *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQMenuDtor(void * obj)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    delete ptr;
}

void SCWQMenuDtor(void * obj)
{
    QMenu * ptr = reinterpret_cast<QMenu *>(obj);
    delete ptr;
}

