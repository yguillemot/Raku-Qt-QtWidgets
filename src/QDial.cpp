
// 
// This file has been automatically generated by RaQt_maker V0.0.7.
// To modify and regenerate it, see the source code available here: 
//         https://github.com/yguillemot/RaQt_maker
// 

#include "QDial.hpp"

void * QWQDialCtor(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    QDial * ptr = new QDial(xparent);
    return reinterpret_cast<void *>(ptr);
}

void * SCWQDialCtor(void * parent)
{
    QWidget * xparent = reinterpret_cast<QWidget *>(parent);
    SCQDial * ptr = new SCQDial(xparent);
    return reinterpret_cast<void *>(ptr);
}

int8_t QWQDialwrapping(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    bool retVal = ptr->wrapping();
    return retVal;
}

int32_t QWQDialnotchSize(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    int retVal = ptr->notchSize();
    return retVal;
}

void QWQDialsetNotchTarget(void * obj, double  target)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    double xtarget = target;
    ptr->setNotchTarget(xtarget);
}

double QWQDialnotchTarget(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    qreal retVal = ptr->notchTarget();
    return retVal;
}

int8_t QWQDialnotchesVisible(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    bool retVal = ptr->notchesVisible();
    return retVal;
}

void QWQDialsetNotchesVisible(void * obj, int8_t  visible)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    bool xvisible = visible;
    ptr->setNotchesVisible(xvisible);
}

void QWQDialsetWrapping(void * obj, int8_t  on)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    bool xon = on;
    ptr->setWrapping(xon);
}

void QWvalidateCB_QDial(void *obj, int32_t objId, char *methodName)
{
    SCQDial * ptr = reinterpret_cast<SCQDial *>(obj);

    ptr->validateEvent(objId, methodName);

}
void QWQDialDtor(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    delete ptr;
}

void SCWQDialDtor(void * obj)
{
    QDial * ptr = reinterpret_cast<QDial *>(obj);
    delete ptr;
}

