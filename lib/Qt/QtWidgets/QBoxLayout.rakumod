
# 
# This file has been automatically generated by RaQt_maker V0.0.5.
# To modify and regenerate it, see the source code available here: 
#         https://github.com/yguillemot/RaQt_maker
# 

use NativeCall;
use Qt::QtWidgets:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;
use Qt::QtWidgets::QtHelpers:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;
use Qt::QtWidgets::QtWrappers:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;
use Qt::QtWidgets::QLayout:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;
use Qt::QtWidgets::RQBoxLayout:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;
use Qt::QtWidgets::RQLayout:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>;



class QBoxLayout:ver<0.0.5>:auth<cpan:YGUILLEMO>:api<2>
    is QLayout
    does RQBoxLayout
    is export {

    submethod new(|capture) is hidden-from-backtrace {
        unimplementedCtor("QBoxLayout");
    }

    method addLayout(RQLayout $layout, Int $stretch = 0)
    {
        my $a1 = ?$layout ?? $layout.address !! QWInt2Pointer(0);
        QWQBoxLayoutaddLayout(self.address, $a1, $stretch);
    }

}


sub QWQBoxLayoutaddLayout(Pointer, Pointer, int32)
    is native(&libwrapper) { * }

